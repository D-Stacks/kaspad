syntax = "proto3";
package protowire;

option go_package = "github.com/kaspanet/kaspad/protowire";

import "p2p.proto";
import "rpc.proto";

message KaspadP2PMessage {
oneof payload {
        AddressesMessage addresses = 1;
        BlockMessage block = 2;
        TransactionMessage transaction = 3;
        BlockLocatorMessage blockLocator = 5;
        RequestAddressesMessage requestAddresses = 6;
        RequestRelayBlocksMessage requestRelayBlocks = 10;
        RequestTransactionsMessage requestTransactions = 12;
        BlockMessage ibdBlock = 13;
        InvRelayBlockMessage invRelayBlock = 14;
        InvTransactionsMessage invTransactions = 15;
        PingMessage ping = 16;
        PongMessage pong = 17;
        VerackMessage verack = 19;
        VersionMessage version = 20;
        TransactionNotFoundMessage transactionNotFound = 21;
        RejectMessage reject = 22;
        PruningPointUtxoSetChunkMessage pruningPointUtxoSetChunk = 25;
        RequestIBDBlocksMessage requestIBDBlocks = 26;
        UnexpectedPruningPointMessage unexpectedPruningPoint = 27;
        IbdBlockLocatorMessage ibdBlockLocator = 30;
        IbdBlockLocatorHighestHashMessage ibdBlockLocatorHighestHash = 31;
        RequestNextPruningPointUtxoSetChunkMessage requestNextPruningPointUtxoSetChunk = 33;
        DonePruningPointUtxoSetChunksMessage donePruningPointUtxoSetChunks = 34;
        IbdBlockLocatorHighestHashNotFoundMessage ibdBlockLocatorHighestHashNotFound = 35;
        BlockWithTrustedDataMessage blockWithTrustedData = 36;
        DoneBlocksWithTrustedDataMessage doneBlocksWithTrustedData = 37;
        RequestPruningPointAndItsAnticoneMessage requestPruningPointAndItsAnticone = 40;
        BlockHeadersMessage blockHeaders = 41;
        RequestNextHeadersMessage requestNextHeaders = 42;
        DoneHeadersMessage DoneHeaders = 43;
        RequestPruningPointUTXOSetMessage requestPruningPointUTXOSet = 44;
        RequestHeadersMessage requestHeaders = 45;
        RequestBlockLocatorMessage requestBlockLocator = 46;
        PruningPointsMessage pruningPoints = 47;
        RequestPruningPointProofMessage requestPruningPointProof = 48;
        PruningPointProofMessage pruningPointProof = 49;
        ReadyMessage ready = 50;
        BlockWithTrustedDataV4Message blockWithTrustedDataV4 = 51;
        TrustedDataMessage trustedData = 52;
        RequestIBDChainBlockLocatorMessage requestIBDChainBlockLocator = 53;
        IbdChainBlockLocatorMessage ibdChainBlockLocator = 54;
        RequestAnticoneMessage requestAnticone = 55;
        RequestNextPruningPointAndItsAnticoneBlocksMessage requestNextPruningPointAndItsAnticoneBlocks = 56;
}

}

message KaspadRPCResponseMessage {
        uint64 id = 1;
        string responseMessage = 2;
        uint64 timestamp = 3;
        uint64 seqNum = 4;
        oneof payload {
                GetCurrentNetworkResponseMessage getCurrentNetworkResponse = 1002;
                SubmitBlockResponseMessage submitBlockResponse = 1004;
                GetBlockTemplateResponseMessage getBlockTemplateResponse = 1006;
                NotifyBlockAddedResponseMessage notifyBlockAddedResponse = 1008;
                BlockAddedNotificationMessage blockAddedNotification = 1009;
                GetPeerAddressesResponseMessage getPeerAddressesResponse = 1011;
                GetSelectedTipHashResponseMessage getSelectedTipHashResponse = 1013;
                GetMempoolEntryResponseMessage getMempoolEntryResponse = 1015;
                GetConnectedPeerInfoResponseMessage getConnectedPeerInfoResponse = 1017;
                AddPeerResponseMessage addPeerResponse = 1019;
                SubmitTransactionResponseMessage submitTransactionResponse = 1021;
                NotifyVirtualSelectedParentChainChangedResponseMessage notifyVirtualSelectedParentChainChangedResponse = 1023;
                VirtualSelectedParentChainChangedNotificationMessage virtualSelectedParentChainChangedNotification = 1024;
                GetBlockResponseMessage getBlockResponse = 1026;
                GetSubnetworkResponseMessage getSubnetworkResponse = 1028;
                GetVirtualSelectedParentChainFromBlockResponseMessage getVirtualSelectedParentChainFromBlockResponse = 1030;
                GetBlocksResponseMessage getBlocksResponse = 1032;
                GetBlockCountResponseMessage getBlockCountResponse = 1034;
                GetBlockDagInfoResponseMessage getBlockDagInfoResponse = 1036;
                ResolveFinalityConflictResponseMessage resolveFinalityConflictResponse = 1038;
                NotifyFinalityConflictsResponseMessage notifyFinalityConflictsResponse = 1040;
                FinalityConflictNotificationMessage finalityConflictNotification = 1041;
                FinalityConflictResolvedNotificationMessage finalityConflictResolvedNotification = 1042;
                GetMempoolEntriesResponseMessage getMempoolEntriesResponse = 1044;
                ShutDownResponseMessage shutDownResponse = 1046;
                GetHeadersResponseMessage getHeadersResponse = 1048;
                NotifyUtxosChangedResponseMessage notifyUtxosChangedResponse = 1050;
                UtxosChangedNotificationMessage utxosChangedNotification = 1051;
                GetUtxosByAddressesResponseMessage getUtxosByAddressesResponse = 1053;
                GetVirtualSelectedParentBlueScoreResponseMessage getVirtualSelectedParentBlueScoreResponse = 1055;
                NotifyVirtualSelectedParentBlueScoreChangedResponseMessage notifyVirtualSelectedParentBlueScoreChangedResponse = 1057;
                VirtualSelectedParentBlueScoreChangedNotificationMessage virtualSelectedParentBlueScoreChangedNotification = 1058;
                BanResponseMessage banResponse = 1060;
                UnbanResponseMessage unbanResponse = 1062;
                GetInfoResponseMessage getInfoResponse = 1064;
                StopNotifyingUtxosChangedResponseMessage stopNotifyingUtxosChangedResponse = 1066;
                NotifyPruningPointUTXOSetOverrideResponseMessage notifyPruningPointUTXOSetOverrideResponse = 1068;
                PruningPointUTXOSetOverrideNotificationMessage pruningPointUTXOSetOverrideNotification = 1069;
                StopNotifyingPruningPointUTXOSetOverrideResponseMessage stopNotifyingPruningPointUTXOSetOverrideResponse = 1071;
                EstimateNetworkHashesPerSecondResponseMessage estimateNetworkHashesPerSecondResponse = 1073;
                NotifyVirtualDaaScoreChangedResponseMessage notifyVirtualDaaScoreChangedResponse = 1075;
                VirtualDaaScoreChangedNotificationMessage virtualDaaScoreChangedNotification = 1076;
                GetBalanceByAddressResponseMessage getBalanceByAddressResponse = 1078;
                GetBalancesByAddressesResponseMessage getBalancesByAddressesResponse = 1080;
                NotifyNewBlockTemplateResponseMessage notifyNewBlockTemplateResponse = 1082;
                NewBlockTemplateNotificationMessage newBlockTemplateNotification = 1083;
                GetMempoolEntriesByAddressesResponseMessage getMempoolEntriesByAddressesResponse = 1085;
        }
        string Error = 5;
}

message KaspadMessage {
        uint64 id = 1;
        oneof payload {
                GetCurrentNetworkRequestMessage getCurrentNetworkRequest = 1001;
                SubmitBlockRequestMessage submitBlockRequest = 1003;
                GetBlockTemplateRequestMessage getBlockTemplateRequest = 1005;
                NotifyBlockAddedRequestMessage notifyBlockAddedRequest = 1007;
                GetPeerAddressesRequestMessage getPeerAddressesRequest = 1010;
                GetSelectedTipHashRequestMessage getSelectedTipHashRequest = 1012;
                GetMempoolEntryRequestMessage getMempoolEntryRequest = 1014;
                GetConnectedPeerInfoRequestMessage getConnectedPeerInfoRequest = 1016;
                AddPeerRequestMessage addPeerRequest = 1018;
                SubmitTransactionRequestMessage submitTransactionRequest = 1020;
                NotifyVirtualSelectedParentChainChangedRequestMessage notifyVirtualSelectedParentChainChangedRequest = 1022;
                GetBlockRequestMessage getBlockRequest = 1025;
                GetSubnetworkRequestMessage getSubnetworkRequest = 1027;
                GetVirtualSelectedParentChainFromBlockRequestMessage getVirtualSelectedParentChainFromBlockRequest = 1029;
                GetBlocksRequestMessage getBlocksRequest = 1031;
                GetBlockCountRequestMessage getBlockCountRequest = 1033;
                GetBlockDagInfoRequestMessage getBlockDagInfoRequest = 1035;
                ResolveFinalityConflictRequestMessage resolveFinalityConflictRequest = 1037;
                NotifyFinalityConflictsRequestMessage notifyFinalityConflictsRequest = 1039;
                GetMempoolEntriesRequestMessage getMempoolEntriesRequest = 1043;
                ShutDownRequestMessage shutDownRequest = 1045;
                GetHeadersRequestMessage getHeadersRequest = 1047;
                NotifyUtxosChangedRequestMessage notifyUtxosChangedRequest = 1049;
                GetUtxosByAddressesRequestMessage getUtxosByAddressesRequest = 1052;
                GetVirtualSelectedParentBlueScoreRequestMessage getVirtualSelectedParentBlueScoreRequest = 1054;
                NotifyVirtualSelectedParentBlueScoreChangedRequestMessage notifyVirtualSelectedParentBlueScoreChangedRequest = 1056;
                BanRequestMessage banRequest = 1059;
                UnbanRequestMessage unbanRequest = 1061;
                GetInfoRequestMessage getInfoRequest = 1063;
                StopNotifyingUtxosChangedRequestMessage stopNotifyingUtxosChangedRequest = 1065;
                NotifyPruningPointUTXOSetOverrideRequestMessage notifyPruningPointUTXOSetOverrideRequest = 1067;
                StopNotifyingPruningPointUTXOSetOverrideRequestMessage stopNotifyingPruningPointUTXOSetOverrideRequest = 1070;
                EstimateNetworkHashesPerSecondRequestMessage estimateNetworkHashesPerSecondRequest = 1072;
                NotifyVirtualDaaScoreChangedRequestMessage notifyVirtualDaaScoreChangedRequest = 1074;
                GetBalanceByAddressRequestMessage getBalanceByAddressRequest = 1077;
                GetBalancesByAddressesRequestMessage getBalancesByAddressesRequest = 1079;
                NotifyNewBlockTemplateRequestMessage notifyNewBlockTemplateRequest = 1081;
                GetMempoolEntriesByAddressesRequestMessage getMempoolEntriesByAddressesRequest = 1084;
        }
}

service P2P {
  rpc MessageStream (stream KaspadP2PMessage) returns (stream KaspadP2PMessage) {}
}

service RPC {
  rpc MessageStream (stream KaspadMessage) returns (stream KaspadRPCResponseMessage) {}
}
